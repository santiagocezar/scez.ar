---
import { Image, type ImageMetadata } from 'astro:assets';
import CoolButton from "./CoolButton.astro";

export interface Props {
    name: string;
    capture: ImageMetadata;
    logo: ImageMetadata;
    alt: string;
    action?: string;
    "action-href"?: string;
}

const {
    name,
    capture,
    logo,
    alt,
    "action-href": actionHref = "#",
    action,
} = Astro.props;

const device = capture.width > capture.height ? 'desktop' : 'mobile'
const compact = name.length > 14;
---

<div class:list={["featured-card", { compact }, device]}>
    <p class="content">
        <slot />
    </p>
    <Image src={capture} alt={alt} class="preview" />
    {
        action && actionHref && (
            <a class="action" href={actionHref}>
                {action}
            </a>
        )
    }
    {
        logo ? (
            <Image src={logo} alt={name} class="title" />
        ) : (
            <h1 class="title">{name}</h1>
        )
    }
</div>

<style lang="less">
    .featured-card {
        display: grid;
        grid-template:
            "logo .       .    desc .   .       .  " 2rem
            ".    logoimg .    .    .   .       .  " 1rem
            ".    .       .    .    .   .       .  " 10rem
            ".    .       .    .    .   descact .  " 4rem
            ".    .       .    img  .   .       act" 2rem
           / 1rem 2fr     auto 1rem 3fr 1fr     1rem;

        gap: 1.2rem;
        color: #040624;
        width: 100%;
        font-size: 1.75rem;
    }
    .title {
        grid-area: logo / logo / logoimg / logoimg;
        font-size: 1.8em;
        background-color: white;
        border: black solid 1px;
        box-shadow: .25rem .25rem black;
        border-radius: 1rem;
        padding: 1rem;
/*         line-height: 1.2; */
    }
    .preview {
        grid-area: logoimg  / logoimg / img / img;
    }
    .content {
        grid-area: desc / desc / descact / descact;
    }
    .action {
        grid-area: descact / descact / act / act;
    }
    .preview {
        border: black solid 1px;
        box-shadow: .25rem .25rem black;
        border-radius: 1rem;
        object-fit: cover;
        object-position: top;
        height: 100%;
        width: auto;
        aspect-ratio: 1 / 1;
    }
    &.compact .content .title {
        font-size: 1.5em;
    }
    .content {
        border: var(--blue3) solid 1px;
        box-shadow: .25rem .25rem var(--blue3);
        background-color: var(--blue1);
        border-radius: 1rem;
        padding: 2em 1em 2em 2em;
        color: var(--blue4);
    }

    img.title {
        height: 100%;
        width: auto;
        object-fit: contain;
    }

    .action {
        border: var(--pink3) solid 1px;
        box-shadow: .25rem .25rem var(--pink3);
        background-color: var(--pink1);
        border-radius: 1rem;
        align-self: end;
        justify-self: end;
        white-space: nowrap;
        padding: 0.5em 1em;
        color: var(--pink4);
        font-weight: bold;
        text-decoration: none;
        z-index: 1;

        transition: box-shadow 0.2s ease;
        &:hover {
            box-shadow: -0.3em 0.2em #f64b95, 0.3em -0.2em #00a6d2;
            &:active {
                box-shadow: none;
                background-color: #6442a0;
            }
        }
    }
    /*
    @media screen and (max-width: 40rem) {
        .featured-card {
            grid-template-columns: 1rem 1fr 1rem;
            grid-template-rows: 1fr 2rem auto 1rem 1rem;

            font-size: 1.5rem;
        }
        .preview {
            grid-area: 1 / 1 / 3 / 3;
        }
        .content {
            grid-area: 2/2/5/4;
            padding: 1em 1em 3em 1em;
        }
        .action {
            grid-row-end: -1;
            grid-column-end: -2;
        }
    }*/
</style>
