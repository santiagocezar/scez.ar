---
import * as assets from "src/content/assets";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import other from "src/content/other_projects.yml"

const projects = (await getCollection("projects")).sort(
    (a, b) => a.data.order - b.data.order,
);

const otherProjects = (await getCollection("otherProjects"));
---

<div class="projects">
    {
        projects.map(({ data, rendered }) => (
            <div class="featured">
                <section class="card-blue">
                    <header>
                        <Image src={data.logosrc} alt={data.logoalt} />
                    </header>
                    <article>
                        <Fragment set:html={rendered?.html ?? ""} />
                        {data.href && (
                            <p>
                                <a href={data.href}>
                                    {data.hreflabel ?? "Abrir"}
                                </a>
                            </p>
                        )}
                    </article>
                </section>
                <Image
                    class="pic card"
                    src={data.thumbsrc}
                    alt={data.thumbalt}
                />
            </div>
        ))
    }
    <section class="other card-blue">
        <h2>Otros proyectos</h2>
        
        <article>
            <ul>
                {otherProjects.map(({data}) => (
                    <li>
                        <span class="name">
                            <a href={data.link}>{data.name}</a>
                        </span>
                        <span class="about">{data.about}</span>
                        <span class="year">{data.year}</span>
                    </li>
                ))}
            </ul>
        </article>
    </section>
</div>


<style>
    .other-details {
        font-size: 1.25rem;
        overflow: hidden;
        grid-column: wide1-start 1 / wide2-end -1;
    }

    .projects {
        display: grid;
        grid-column: wide1-start 1 / wide2-end -1;
        grid-auto-columns: 100%;
        grid-template-rows: 1fr;
        grid-auto-flow: row;
        width: 100%;
        margin: 0 auto;
        gap: 3rem;

        --header-height: 4rem;
        --pic-height: calc(var(--header-height) * 3);
    }

    .featured {
        display: flex;
        width: 100%;

        & .pic {
            object-fit: cover;
            object-position: top;
            width: 30%;
            flex-shrink: 0;
            aspect-ratio: 1 / 1;
            align-self: end;
            translate: 0 1rem;
            margin-left: -1rem;
        }

        & section {
            flex-grow: 1;
            font-size: 1.25rem;
        }

        & article {
            padding: 1.5rem 2rem 1.5rem 2.5rem;
        }

        & header {
            border-bottom: 1px dashed var(--blue3);
        }
    }


    .other {
        & h2 {
            font-size: 1.5rem;
            border: none;
        }
        
        & ul {
            display: grid;
            grid-template-columns: auto 1fr auto;
            padding: 0;
        }

        & li {
            display: grid;
            grid-template-columns: subgrid;
            grid-column: 1 / -1;
            border-top: 1px dashed var(--blue-border);
            padding: 1rem;
            gap: 1rem;
            align-items: start;
        }

        & p {
            margin: 0;
        }
        & .name {
            order: 1;
        }
        & .about {
            order: 2;
        }
        & .year {
            font-weight: bold;
            order: 3;
        }
    }

    .other h2,
    .featured header {
        display: flex;
        border-radius: 1rem 1rem 0 0;
        background-color: white;
        color: black;
        padding: 0 1rem 0 2.5rem;
        height: var(--header-height);
        align-items: center;

        img {
            width: auto;
            object-fit: contain;
            height: 60%;
            max-width: 15rem;
        }        
    }

    &.compact .content .title {
        font-size: 1.5em;
    }

    @media screen and (max-width: 40rem) {
        .projects {
            grid-template-rows: 1fr;
            grid-auto-flow: row;
        }
        .featured {
            flex-direction: column-reverse;

            & .pic {
                height: var(--pic-height);
                width: auto;
            }

            & header {
                padding-left: 1.5rem;

                & img {
                    max-width: calc(100% - var(--pic-height));
                }
            }

            & section {
                z-index: 1;
                margin-right: 1rem;
            }

            & article {
                padding: 0.75rem 1rem 1.5rem 1rem;
            }
        }
        .other {
            grid-template-columns: 1fr auto;

            & .about {
                order: 2;
                grid-column: 1 / -1;
            }
            & .year {
                font-weight: bold;
                order: 1;
            }
        }
    }
</style>
