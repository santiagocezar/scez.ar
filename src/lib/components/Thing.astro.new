---
import CoolButton from "./CoolButton.astro";

export interface Props {
    name: string;
    src: string;
    alt: string;
    "logo-src"?: string;
    "action-href"?: string;
    action?: string;
}

const {
    name,
    src,
    alt,
    "logo-src": logoSrc,
    "action-href": actionHref = "#",
    action,
} = Astro.props;

const compact = name.length > 14;
---

<div class:list={["featured-card", { compact }]}>
    <div class="drawer">
        <div class="logo">
            {
                logoSrc ? (
                    <img src={logoSrc} alt={name} class="title" />
                ) : (
                    <h1 class="title">{name}</h1>
                )
            }
        </div>
        <p>
            <slot />
        </p>
        {action && actionHref && <a href={actionHref}>{action}</a>}
    </div>
    <img src={src} alt={alt} class="preview" />
</div>

<style lang="less">
    @height: 20rem;
    @split-height: 6rem;
    @split-radius: 2rem;

    .featured-card {
        border: 0.25rem solid var(--black);
        position: relative;
        background-color: white;

        height: @height;
        overflow: hidden;
        border-radius: 2rem;
    }
    .preview {
        position: absolute;
        top: (@split-height - @split-radius);
        width: 100%;
        min-height: (@height - @split-height + @split-radius);
        object-fit: cover;
        object-position: top;
        transition: top ease 0.2s;
        border-radius: @split-radius;

        .featured-card:hover & {
            top: @height;
            // transform: translateY((-@height + @split-height));
        }
    }
    .drawer {
        flex-shrink: 0;
        display: flex;
        flex-direction: column;
        color: var(--white);
        height: @height;
        background-color: #6442a0;
        p {
            font-size: 1.5em;
            background-color: #6442a0;
            border-radius: @split-radius;
            padding: @split-radius;
            flex-grow: 1;
            margin-top: (-@split-radius);
        }
        a {
            height: 2rem;
            // background-color: red;
        }
    }
    .logo {
        box-sizing: border-box;
        background-color: var(--white);
        color: var(--black);
        height: @split-height;
        padding-bottom: @split-radius;
        text-align: center;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .compact .content .title {
        font-size: 1.5em;
    }
    .content {
        grid-area: content;
        font-size: 1.5rem;
        padding: 2em;
        padding-right: 0;
        .title {
            font-size: 1.8em;
            line-height: 1.2;
        }
        img.title {
            height: 1.2em;
        }
    }

    :global(.cool-button) {
        grid-area: preview;
        align-self: end;
        justify-self: end;
        margin: 1rem;
        z-index: 1;
    }
    @media screen and (max-width: 768px) {
        margin-bottom: 4rem;
        grid-template:
            "content" min-content
            "preview" 18rem
            / auto;

        .content {
            padding: 2rem;
            font-size: 1.2rem;
        }
        .preview {
            mask: unset;
            -webkit-mask: unset;
        }
    }
    .logo {
        color: #040624;
    }
</style>
